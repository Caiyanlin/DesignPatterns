业务介绍：
IPG和PSG是一个流程的两个Team，整体业务流程相同，但是在细节逻辑上不一样。
要Cover两个team的业务，设计上使用了简单工厂的设计模式

角色：
Process：抽象业务流程,定义标准。负责所有具体类的实例类型
ProcessManager:简单工厂模式的核心，相当于工厂,被外界直接调用,用来创建所有类的实例

适用场景：


优点：
1.客户端不用负责创建具体类的实例,也不用关心具体是如何创建的,创建和使用分离,降低了耦合性
2.具体流程(IPG和PSG)的业务逻辑变更不会影响另一个
3.能够适应一定的变化

缺点：
1.一旦有新的流程加入,就需要修改ProcessManager,违背了OCP（开放-关闭原则）
2.如果具体业务太多,就会造成ProcessManager过于复杂，职责过重
